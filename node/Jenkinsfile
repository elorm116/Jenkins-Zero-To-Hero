pipeline {
  agent none

  stages {
    stage('Back-end') {
      agent {
        docker { image 'maven:3.9.6-eclipse-temurin-17' }
      }
      steps {
        sh 'mvn --version'
      }
    }

    stage('Front-end') {
      agent {
        docker { image 'node:20-alpine' }
      }
      steps {
        sh 'node --version'
        script {
          // Check if package.json exists before running npm commands
          if (fileExists('package.json')) {
            sh 'npm install'
            sh 'npm test'
          } else {
            echo 'package.json not found. Skipping npm install and npm test.'
          }
        }
      }
    }

    stage('Build Docker Image') {
      agent {
        docker { image 'docker:latest' }
      }
      steps {
        script {
          // Ensure Dockerfile exists before building the image
          if (fileExists('Dockerfile')) {
            sh 'docker build -t my-node-app .'
          } else {
            echo 'Dockerfile not found. Skipping Docker image build.'
          }
        }
      }
    }

    stage('Run Container') {
      agent {
        docker { image 'docker:latest' }
      }
      steps {
        script {
          // Ensure the Docker image exists before running the container
          if (sh(script: 'docker images -q my-node-app', returnStatus: true) == 0) {
            sh 'docker run -d -p 3000:3000 --name my-running-app my-node-app'
          } else {
            echo 'Docker image my-node-app not found. Skipping container run.'
          }
        }
      }
    }
  }

  post {
    success {
      echo 'Application deployed successfully!'
    }
    failure {
      echo 'Build failed. Check logs!'
    }
  }
}
